|main
CLK_IN <= Block1:inst.CLK_OUT
CLK => Block1:inst.CLOCK_
Down_lvl[0] => Block1:inst.M_ARRAY[0]
Down_lvl[1] => Block1:inst.M_ARRAY[1]
Down_lvl[2] => Block1:inst.M_ARRAY[2]
Down_lvl[3] => Block1:inst.M_ARRAY[3]
Up_lvl[0] => Block1:inst.N_ARRAY[0]
Up_lvl[1] => Block1:inst.N_ARRAY[1]
Up_lvl[2] => Block1:inst.N_ARRAY[2]
Up_lvl[3] => Block1:inst.N_ARRAY[3]
CLOCK_DIVIDED <= Block2:inst4.clk_D
OUTPUT_ARRAY[0] <= Blcok3:inst3.OUTPUT[0]
OUTPUT_ARRAY[1] <= Blcok3:inst3.OUTPUT[1]
OUTPUT_ARRAY[2] <= Blcok3:inst3.OUTPUT[2]
OUTPUT_ARRAY[3] <= Blcok3:inst3.OUTPUT[3]
OUTPUT_ARRAY[4] <= Blcok3:inst3.OUTPUT[4]
OUTPUT_ARRAY[5] <= Blcok3:inst3.OUTPUT[5]
OUTPUT_ARRAY[6] <= Blcok3:inst3.OUTPUT[6]
OUTPUT_ARRAY[7] <= Blcok3:inst3.OUTPUT[7]
OUTPUT_ARRAY[8] <= Blcok3:inst3.OUTPUT[8]
OUTPUT_ARRAY[9] <= Blcok3:inst3.OUTPUT[9]
OUTPUT_ARRAY[10] <= Blcok3:inst3.OUTPUT[10]
OUTPUT_ARRAY[11] <= Blcok3:inst3.OUTPUT[11]
OUTPUT_ARRAY[12] <= Blcok3:inst3.OUTPUT[12]
OUTPUT_ARRAY[13] <= Blcok3:inst3.OUTPUT[13]
OUTPUT_ARRAY[14] <= Blcok3:inst3.OUTPUT[14]
OUTPUT_ARRAY[15] <= Blcok3:inst3.OUTPUT[15]


|main|Block1:inst
CLK_OUT <= JKFFRE:inst10.QN
CLOCK_ => lmp_counter_my:inst1.clock
CLOCK_ => JKFFRE:inst10.CK
CLOCK_ => lmp_counter_my:inst.clock
M_ARRAY[0] => lpm_add_sub0:inst9.dataa[0]
M_ARRAY[1] => lpm_add_sub0:inst9.dataa[1]
M_ARRAY[2] => lpm_add_sub0:inst9.dataa[2]
M_ARRAY[3] => lpm_add_sub0:inst9.dataa[3]
N_ARRAY[0] => lpm_add_sub0:inst8.dataa[0]
N_ARRAY[1] => lpm_add_sub0:inst8.dataa[1]
N_ARRAY[2] => lpm_add_sub0:inst8.dataa[2]
N_ARRAY[3] => lpm_add_sub0:inst8.dataa[3]


|main|Block1:inst|JKFFRE:inst10
QN <= 9.DB_MAX_OUTPUT_PORT_TYPE
S => 7.IN0
R => 8.IN0
K => 6~1.IN0
J => 6~0.IN1
CK => 6.CLK
Q <= 6.DB_MAX_OUTPUT_PORT_TYPE


|main|Block1:inst|lpm_compare0:inst3
dataa[0] => lpm_compare:lpm_compare_component.dataa[0]
dataa[1] => lpm_compare:lpm_compare_component.dataa[1]
dataa[2] => lpm_compare:lpm_compare_component.dataa[2]
dataa[3] => lpm_compare:lpm_compare_component.dataa[3]
datab[0] => lpm_compare:lpm_compare_component.datab[0]
datab[1] => lpm_compare:lpm_compare_component.datab[1]
datab[2] => lpm_compare:lpm_compare_component.datab[2]
datab[3] => lpm_compare:lpm_compare_component.datab[3]
aeb <= lpm_compare:lpm_compare_component.aeb


|main|Block1:inst|lpm_compare0:inst3|lpm_compare:lpm_compare_component
dataa[0] => cmpr_big:auto_generated.dataa[0]
dataa[1] => cmpr_big:auto_generated.dataa[1]
dataa[2] => cmpr_big:auto_generated.dataa[2]
dataa[3] => cmpr_big:auto_generated.dataa[3]
datab[0] => cmpr_big:auto_generated.datab[0]
datab[1] => cmpr_big:auto_generated.datab[1]
datab[2] => cmpr_big:auto_generated.datab[2]
datab[3] => cmpr_big:auto_generated.datab[3]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
alb <= <GND>
aeb <= cmpr_big:auto_generated.aeb
agb <= <GND>
aleb <= <GND>
aneb <= <GND>
ageb <= <GND>


|main|Block1:inst|lpm_compare0:inst3|lpm_compare:lpm_compare_component|cmpr_big:auto_generated
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0]~2.IN0
dataa[1] => data_wire[0]~3.IN0
dataa[2] => data_wire[1]~0.IN0
dataa[3] => data_wire[1]~1.IN0
datab[0] => data_wire[0]~2.IN1
datab[1] => data_wire[0]~3.IN1
datab[2] => data_wire[1]~0.IN1
datab[3] => data_wire[1]~1.IN1


|main|Block1:inst|lmp_counter_my:inst1
clock => lpm_counter:lpm_counter_component.clock
sclr => lpm_counter:lpm_counter_component.sclr
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]


|main|Block1:inst|lmp_counter_my:inst1|lpm_counter:lpm_counter_component
clock => cntr_e4i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_e4i:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_e4i:auto_generated.q[0]
q[1] <= cntr_e4i:auto_generated.q[1]
q[2] <= cntr_e4i:auto_generated.q[2]
q[3] <= cntr_e4i:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|main|Block1:inst|lmp_counter_my:inst1|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sclr => _~9.IN1
sclr => counter_reg_bit1a[3].SCLR
sclr => counter_reg_bit1a[2].SCLR
sclr => counter_reg_bit1a[1].SCLR
sclr => counter_reg_bit1a[0].SCLR


|main|Block1:inst|lpm_add_sub0:inst9
dataa[0] => lpm_add_sub:lpm_add_sub_component.dataa[0]
dataa[1] => lpm_add_sub:lpm_add_sub_component.dataa[1]
dataa[2] => lpm_add_sub:lpm_add_sub_component.dataa[2]
dataa[3] => lpm_add_sub:lpm_add_sub_component.dataa[3]
result[0] <= lpm_add_sub:lpm_add_sub_component.result[0]
result[1] <= lpm_add_sub:lpm_add_sub_component.result[1]
result[2] <= lpm_add_sub:lpm_add_sub_component.result[2]
result[3] <= lpm_add_sub:lpm_add_sub_component.result[3]


|main|Block1:inst|lpm_add_sub0:inst9|lpm_add_sub:lpm_add_sub_component
dataa[0] => add_sub_vph:auto_generated.dataa[0]
dataa[1] => add_sub_vph:auto_generated.dataa[1]
dataa[2] => add_sub_vph:auto_generated.dataa[2]
dataa[3] => add_sub_vph:auto_generated.dataa[3]
datab[0] => add_sub_vph:auto_generated.datab[0]
datab[1] => add_sub_vph:auto_generated.datab[1]
datab[2] => add_sub_vph:auto_generated.datab[2]
datab[3] => add_sub_vph:auto_generated.datab[3]
cin => ~NO_FANOUT~
add_sub => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= add_sub_vph:auto_generated.result[0]
result[1] <= add_sub_vph:auto_generated.result[1]
result[2] <= add_sub_vph:auto_generated.result[2]
result[3] <= add_sub_vph:auto_generated.result[3]
cout <= <GND>
overflow <= <GND>


|main|Block1:inst|lpm_add_sub0:inst9|lpm_add_sub:lpm_add_sub_component|add_sub_vph:auto_generated
dataa[0] => op_1.IN7
dataa[1] => op_1.IN5
dataa[2] => op_1.IN3
dataa[3] => op_1.IN1
datab[0] => op_1.IN8
datab[1] => op_1.IN6
datab[2] => op_1.IN4
datab[3] => op_1.IN2
result[0] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= op_1.DB_MAX_OUTPUT_PORT_TYPE


|main|Block1:inst|lpm_compare0:inst2
dataa[0] => lpm_compare:lpm_compare_component.dataa[0]
dataa[1] => lpm_compare:lpm_compare_component.dataa[1]
dataa[2] => lpm_compare:lpm_compare_component.dataa[2]
dataa[3] => lpm_compare:lpm_compare_component.dataa[3]
datab[0] => lpm_compare:lpm_compare_component.datab[0]
datab[1] => lpm_compare:lpm_compare_component.datab[1]
datab[2] => lpm_compare:lpm_compare_component.datab[2]
datab[3] => lpm_compare:lpm_compare_component.datab[3]
aeb <= lpm_compare:lpm_compare_component.aeb


|main|Block1:inst|lpm_compare0:inst2|lpm_compare:lpm_compare_component
dataa[0] => cmpr_big:auto_generated.dataa[0]
dataa[1] => cmpr_big:auto_generated.dataa[1]
dataa[2] => cmpr_big:auto_generated.dataa[2]
dataa[3] => cmpr_big:auto_generated.dataa[3]
datab[0] => cmpr_big:auto_generated.datab[0]
datab[1] => cmpr_big:auto_generated.datab[1]
datab[2] => cmpr_big:auto_generated.datab[2]
datab[3] => cmpr_big:auto_generated.datab[3]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
alb <= <GND>
aeb <= cmpr_big:auto_generated.aeb
agb <= <GND>
aleb <= <GND>
aneb <= <GND>
ageb <= <GND>


|main|Block1:inst|lpm_compare0:inst2|lpm_compare:lpm_compare_component|cmpr_big:auto_generated
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0]~2.IN0
dataa[1] => data_wire[0]~3.IN0
dataa[2] => data_wire[1]~0.IN0
dataa[3] => data_wire[1]~1.IN0
datab[0] => data_wire[0]~2.IN1
datab[1] => data_wire[0]~3.IN1
datab[2] => data_wire[1]~0.IN1
datab[3] => data_wire[1]~1.IN1


|main|Block1:inst|lpm_add_sub0:inst8
dataa[0] => lpm_add_sub:lpm_add_sub_component.dataa[0]
dataa[1] => lpm_add_sub:lpm_add_sub_component.dataa[1]
dataa[2] => lpm_add_sub:lpm_add_sub_component.dataa[2]
dataa[3] => lpm_add_sub:lpm_add_sub_component.dataa[3]
result[0] <= lpm_add_sub:lpm_add_sub_component.result[0]
result[1] <= lpm_add_sub:lpm_add_sub_component.result[1]
result[2] <= lpm_add_sub:lpm_add_sub_component.result[2]
result[3] <= lpm_add_sub:lpm_add_sub_component.result[3]


|main|Block1:inst|lpm_add_sub0:inst8|lpm_add_sub:lpm_add_sub_component
dataa[0] => add_sub_vph:auto_generated.dataa[0]
dataa[1] => add_sub_vph:auto_generated.dataa[1]
dataa[2] => add_sub_vph:auto_generated.dataa[2]
dataa[3] => add_sub_vph:auto_generated.dataa[3]
datab[0] => add_sub_vph:auto_generated.datab[0]
datab[1] => add_sub_vph:auto_generated.datab[1]
datab[2] => add_sub_vph:auto_generated.datab[2]
datab[3] => add_sub_vph:auto_generated.datab[3]
cin => ~NO_FANOUT~
add_sub => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= add_sub_vph:auto_generated.result[0]
result[1] <= add_sub_vph:auto_generated.result[1]
result[2] <= add_sub_vph:auto_generated.result[2]
result[3] <= add_sub_vph:auto_generated.result[3]
cout <= <GND>
overflow <= <GND>


|main|Block1:inst|lpm_add_sub0:inst8|lpm_add_sub:lpm_add_sub_component|add_sub_vph:auto_generated
dataa[0] => op_1.IN7
dataa[1] => op_1.IN5
dataa[2] => op_1.IN3
dataa[3] => op_1.IN1
datab[0] => op_1.IN8
datab[1] => op_1.IN6
datab[2] => op_1.IN4
datab[3] => op_1.IN2
result[0] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= op_1.DB_MAX_OUTPUT_PORT_TYPE


|main|Block1:inst|lmp_counter_my:inst
clock => lpm_counter:lpm_counter_component.clock
sclr => lpm_counter:lpm_counter_component.sclr
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]


|main|Block1:inst|lmp_counter_my:inst|lpm_counter:lpm_counter_component
clock => cntr_e4i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_e4i:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_e4i:auto_generated.q[0]
q[1] <= cntr_e4i:auto_generated.q[1]
q[2] <= cntr_e4i:auto_generated.q[2]
q[3] <= cntr_e4i:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|main|Block1:inst|lmp_counter_my:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sclr => _~9.IN1
sclr => counter_reg_bit1a[3].SCLR
sclr => counter_reg_bit1a[2].SCLR
sclr => counter_reg_bit1a[1].SCLR
sclr => counter_reg_bit1a[0].SCLR


|main|Block2:inst4
clk_D <= inst5.DB_MAX_OUTPUT_PORT_TYPE
clk_in => lmp_counter_my:inst2.clock
clk_in => inst1.IN0
count_down[0] <= counter_down[0].DB_MAX_OUTPUT_PORT_TYPE
count_down[1] <= counter_down[1].DB_MAX_OUTPUT_PORT_TYPE
count_down[2] <= counter_down[2].DB_MAX_OUTPUT_PORT_TYPE
count_down[3] <= counter_down[3].DB_MAX_OUTPUT_PORT_TYPE
count_up[0] <= counter_up[0].DB_MAX_OUTPUT_PORT_TYPE
count_up[1] <= counter_up[1].DB_MAX_OUTPUT_PORT_TYPE
count_up[2] <= counter_up[2].DB_MAX_OUTPUT_PORT_TYPE
count_up[3] <= counter_up[3].DB_MAX_OUTPUT_PORT_TYPE


|main|Block2:inst4|16dmux:inst3
Q8 <= 24.DB_MAX_OUTPUT_PORT_TYPE
A => 5.IN0
A => 22.IN0
A => 14.IN0
A => 12.IN0
A => 10.IN0
A => 26.IN0
A => 28.IN0
A => 30.IN0
A => 32.IN0
B => 6.IN0
B => 20.IN1
B => 14.IN2
B => 11.IN1
B => 10.IN1
B => 26.IN1
B => 27.IN1
B => 30.IN1
B => 31.IN1
C => 7.IN0
C => 13.IN2
C => 12.IN2
C => 11.IN2
C => 10.IN2
C => 26.IN2
C => 27.IN2
C => 28.IN2
C => 29.IN2
D => 24.IN3
D => 22.IN3
D => 20.IN3
D => 14.IN3
D => 13.IN3
D => 12.IN3
D => 11.IN3
D => 10.IN3
D => 8.IN0
Q9 <= 22.DB_MAX_OUTPUT_PORT_TYPE
Q10 <= 20.DB_MAX_OUTPUT_PORT_TYPE
Q11 <= 14.DB_MAX_OUTPUT_PORT_TYPE
Q12 <= 13.DB_MAX_OUTPUT_PORT_TYPE
Q13 <= 12.DB_MAX_OUTPUT_PORT_TYPE
Q14 <= 11.DB_MAX_OUTPUT_PORT_TYPE
Q15 <= 10.DB_MAX_OUTPUT_PORT_TYPE
Q7 <= 26.DB_MAX_OUTPUT_PORT_TYPE
Q6 <= 27.DB_MAX_OUTPUT_PORT_TYPE
Q5 <= 28.DB_MAX_OUTPUT_PORT_TYPE
Q4 <= 29.DB_MAX_OUTPUT_PORT_TYPE
Q3 <= 30.DB_MAX_OUTPUT_PORT_TYPE
Q2 <= 31.DB_MAX_OUTPUT_PORT_TYPE
Q1 <= 32.DB_MAX_OUTPUT_PORT_TYPE
Q0 <= 33.DB_MAX_OUTPUT_PORT_TYPE


|main|Block2:inst4|lmp_counter_my:inst2
clock => lpm_counter:lpm_counter_component.clock
sclr => lpm_counter:lpm_counter_component.sclr
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]


|main|Block2:inst4|lmp_counter_my:inst2|lpm_counter:lpm_counter_component
clock => cntr_e4i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_e4i:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_e4i:auto_generated.q[0]
q[1] <= cntr_e4i:auto_generated.q[1]
q[2] <= cntr_e4i:auto_generated.q[2]
q[3] <= cntr_e4i:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|main|Block2:inst4|lmp_counter_my:inst2|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sclr => _~9.IN1
sclr => counter_reg_bit1a[3].SCLR
sclr => counter_reg_bit1a[2].SCLR
sclr => counter_reg_bit1a[1].SCLR
sclr => counter_reg_bit1a[0].SCLR


|main|Block2:inst4|16dmux:inst4
Q8 <= 24.DB_MAX_OUTPUT_PORT_TYPE
A => 5.IN0
A => 22.IN0
A => 14.IN0
A => 12.IN0
A => 10.IN0
A => 26.IN0
A => 28.IN0
A => 30.IN0
A => 32.IN0
B => 6.IN0
B => 20.IN1
B => 14.IN2
B => 11.IN1
B => 10.IN1
B => 26.IN1
B => 27.IN1
B => 30.IN1
B => 31.IN1
C => 7.IN0
C => 13.IN2
C => 12.IN2
C => 11.IN2
C => 10.IN2
C => 26.IN2
C => 27.IN2
C => 28.IN2
C => 29.IN2
D => 24.IN3
D => 22.IN3
D => 20.IN3
D => 14.IN3
D => 13.IN3
D => 12.IN3
D => 11.IN3
D => 10.IN3
D => 8.IN0
Q9 <= 22.DB_MAX_OUTPUT_PORT_TYPE
Q10 <= 20.DB_MAX_OUTPUT_PORT_TYPE
Q11 <= 14.DB_MAX_OUTPUT_PORT_TYPE
Q12 <= 13.DB_MAX_OUTPUT_PORT_TYPE
Q13 <= 12.DB_MAX_OUTPUT_PORT_TYPE
Q14 <= 11.DB_MAX_OUTPUT_PORT_TYPE
Q15 <= 10.DB_MAX_OUTPUT_PORT_TYPE
Q7 <= 26.DB_MAX_OUTPUT_PORT_TYPE
Q6 <= 27.DB_MAX_OUTPUT_PORT_TYPE
Q5 <= 28.DB_MAX_OUTPUT_PORT_TYPE
Q4 <= 29.DB_MAX_OUTPUT_PORT_TYPE
Q3 <= 30.DB_MAX_OUTPUT_PORT_TYPE
Q2 <= 31.DB_MAX_OUTPUT_PORT_TYPE
Q1 <= 32.DB_MAX_OUTPUT_PORT_TYPE
Q0 <= 33.DB_MAX_OUTPUT_PORT_TYPE


|main|Block2:inst4|lmp_counter_my:inst
clock => lpm_counter:lpm_counter_component.clock
sclr => lpm_counter:lpm_counter_component.sclr
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]


|main|Block2:inst4|lmp_counter_my:inst|lpm_counter:lpm_counter_component
clock => cntr_e4i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_e4i:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_e4i:auto_generated.q[0]
q[1] <= cntr_e4i:auto_generated.q[1]
q[2] <= cntr_e4i:auto_generated.q[2]
q[3] <= cntr_e4i:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|main|Block2:inst4|lmp_counter_my:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sclr => _~9.IN1
sclr => counter_reg_bit1a[3].SCLR
sclr => counter_reg_bit1a[2].SCLR
sclr => counter_reg_bit1a[1].SCLR
sclr => counter_reg_bit1a[0].SCLR


|main|Blcok3:inst3
OUTPUT[0] <= OUT[0].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[1] <= OUT[1].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[2] <= OUT[2].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[3] <= OUT[3].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[4] <= OUT[4].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[5] <= OUT[5].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[6] <= OUT[6].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[7] <= OUT[7].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[8] <= OUT[8].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[9] <= OUT[9].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[10] <= OUT[10].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[11] <= OUT[11].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[12] <= OUT[12].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[13] <= OUT[13].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[14] <= OUT[14].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[15] <= OUT[15].DB_MAX_OUTPUT_PORT_TYPE
CLK_D_IN => lpm_counter_for_block_3:inst.clock


|main|Blcok3:inst3|lpm_decode_for_block_3:inst1
data[0] => lpm_decode:lpm_decode_component.data[0]
data[1] => lpm_decode:lpm_decode_component.data[1]
data[2] => lpm_decode:lpm_decode_component.data[2]
data[3] => lpm_decode:lpm_decode_component.data[3]
eq0 <= lpm_decode:lpm_decode_component.eq[0]
eq1 <= lpm_decode:lpm_decode_component.eq[1]
eq10 <= lpm_decode:lpm_decode_component.eq[10]
eq11 <= lpm_decode:lpm_decode_component.eq[11]
eq12 <= lpm_decode:lpm_decode_component.eq[12]
eq13 <= lpm_decode:lpm_decode_component.eq[13]
eq14 <= lpm_decode:lpm_decode_component.eq[14]
eq15 <= lpm_decode:lpm_decode_component.eq[15]
eq2 <= lpm_decode:lpm_decode_component.eq[2]
eq3 <= lpm_decode:lpm_decode_component.eq[3]
eq4 <= lpm_decode:lpm_decode_component.eq[4]
eq5 <= lpm_decode:lpm_decode_component.eq[5]
eq6 <= lpm_decode:lpm_decode_component.eq[6]
eq7 <= lpm_decode:lpm_decode_component.eq[7]
eq8 <= lpm_decode:lpm_decode_component.eq[8]
eq9 <= lpm_decode:lpm_decode_component.eq[9]


|main|Blcok3:inst3|lpm_decode_for_block_3:inst1|lpm_decode:lpm_decode_component
data[0] => decode_e9f:auto_generated.data[0]
data[1] => decode_e9f:auto_generated.data[1]
data[2] => decode_e9f:auto_generated.data[2]
data[3] => decode_e9f:auto_generated.data[3]
enable => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
eq[0] <= decode_e9f:auto_generated.eq[0]
eq[1] <= decode_e9f:auto_generated.eq[1]
eq[2] <= decode_e9f:auto_generated.eq[2]
eq[3] <= decode_e9f:auto_generated.eq[3]
eq[4] <= decode_e9f:auto_generated.eq[4]
eq[5] <= decode_e9f:auto_generated.eq[5]
eq[6] <= decode_e9f:auto_generated.eq[6]
eq[7] <= decode_e9f:auto_generated.eq[7]
eq[8] <= decode_e9f:auto_generated.eq[8]
eq[9] <= decode_e9f:auto_generated.eq[9]
eq[10] <= decode_e9f:auto_generated.eq[10]
eq[11] <= decode_e9f:auto_generated.eq[11]
eq[12] <= decode_e9f:auto_generated.eq[12]
eq[13] <= decode_e9f:auto_generated.eq[13]
eq[14] <= decode_e9f:auto_generated.eq[14]
eq[15] <= decode_e9f:auto_generated.eq[15]


|main|Blcok3:inst3|lpm_decode_for_block_3:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated
data[0] => w_anode102w[1].IN1
data[0] => w_anode112w[1]~1.IN0
data[0] => w_anode122w[1].IN1
data[0] => w_anode132w[1]~1.IN0
data[0] => w_anode142w[1].IN1
data[0] => w_anode152w[1]~0.IN0
data[0] => w_anode162w[1].IN1
data[0] => w_anode21w[1].IN1
data[0] => w_anode31w[1]~1.IN0
data[0] => w_anode41w[1].IN1
data[0] => w_anode4w[1]~2.IN0
data[0] => w_anode51w[1]~1.IN0
data[0] => w_anode61w[1].IN1
data[0] => w_anode71w[1]~0.IN0
data[0] => w_anode81w[1].IN1
data[0] => w_anode91w[1]~2.IN0
data[1] => w_anode102w[2]~1.IN0
data[1] => w_anode112w[2].IN1
data[1] => w_anode122w[2].IN1
data[1] => w_anode132w[2]~0.IN0
data[1] => w_anode142w[2]~0.IN0
data[1] => w_anode152w[2].IN1
data[1] => w_anode162w[2].IN1
data[1] => w_anode21w[2]~1.IN0
data[1] => w_anode31w[2].IN1
data[1] => w_anode41w[2].IN1
data[1] => w_anode4w[2]~1.IN0
data[1] => w_anode51w[2]~0.IN0
data[1] => w_anode61w[2]~0.IN0
data[1] => w_anode71w[2].IN1
data[1] => w_anode81w[2].IN1
data[1] => w_anode91w[2]~1.IN0
data[2] => w_anode102w[3]~0.IN0
data[2] => w_anode112w[3]~0.IN0
data[2] => w_anode122w[3]~0.IN0
data[2] => w_anode132w[3].IN1
data[2] => w_anode142w[3].IN1
data[2] => w_anode152w[3].IN1
data[2] => w_anode162w[3].IN1
data[2] => w_anode21w[3]~0.IN0
data[2] => w_anode31w[3]~0.IN0
data[2] => w_anode41w[3]~0.IN0
data[2] => w_anode4w[3]~0.IN0
data[2] => w_anode51w[3].IN1
data[2] => w_anode61w[3].IN1
data[2] => w_anode71w[3].IN1
data[2] => w_anode81w[3].IN1
data[2] => w_anode91w[3]~0.IN0
data[3] => enable_wire1.IN0
data[3] => w_anode102w[1].IN0
data[3] => w_anode112w[1].IN0
data[3] => w_anode122w[1].IN0
data[3] => w_anode132w[1].IN0
data[3] => w_anode142w[1].IN0
data[3] => w_anode152w[1].IN0
data[3] => w_anode162w[1].IN0
data[3] => w_anode91w[1].IN0
eq[0] <= w_anode4w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode21w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode31w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= w_anode41w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[4] <= w_anode51w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[5] <= w_anode61w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[6] <= w_anode71w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[7] <= w_anode81w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[8] <= w_anode91w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[9] <= w_anode102w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[10] <= w_anode112w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[11] <= w_anode122w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[12] <= w_anode132w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[13] <= w_anode142w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[14] <= w_anode152w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[15] <= w_anode162w[3].DB_MAX_OUTPUT_PORT_TYPE


|main|Blcok3:inst3|lpm_counter_for_block_3:inst
clock => lpm_counter:lpm_counter_component.clock
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]


|main|Blcok3:inst3|lpm_counter_for_block_3:inst|lpm_counter:lpm_counter_component
clock => cntr_qlh:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_qlh:auto_generated.q[0]
q[1] <= cntr_qlh:auto_generated.q[1]
q[2] <= cntr_qlh:auto_generated.q[2]
q[3] <= cntr_qlh:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|main|Blcok3:inst3|lpm_counter_for_block_3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT


